apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Master.Name}}"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{.Release.Name}}-{{.Values.Master.Component}}"
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Master.Component}}"
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
            "name": "jira-create-db",
            "image": "mysql",
            "command": ["bash", "-c", "mysql -u root -p{{.Values.global.mariadbRootPassword}} -h{{template "dbmaster" .}} --verbose < /opt/jira/create-jira-db.sql"],
            "volumeMounts": [
              {
                "name": "jira-config",
                "mountPath": "/opt/jira"
              }
            ]
          }
        ]'
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: {{ template "fullname" . }}
          image: "{{.Values.Master.Image}}:{{.Values.Master.ImageTag}}"
          imagePullPolicy: "{{.Values.Master.ImagePullPolicy}}"
          env:
            - name: JIRA_DATABASE_URL
              value: mysql://jira@{{ template "dbmaster" .}}/jiradb
            - name: JIRA_DB_PASSWORD
              value: {{ .Values.global.jiraDbPassword }}
          ports:
            - containerPort: {{.Values.Master.ContainerPort}}
              name: http
          volumeMounts:
            - mountPath: {{.Values.Master.JiraHome}}
              name: jira-home
      volumes:
      - name: jira-config
        configMap:
          name: {{ template "fullname" . }}
      - name: jira-home
      {{- if .Values.Persistence.Enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
